#!/bin/bash


commitcount=50
[[ -n $1 ]] && commitcount=$1

if [[ $commitcount == 1 ]]; then
    git --no-pager log -n $commitcount --reverse --pretty="    %cd | %h | " --date=format:"%a | %d.%m. | %H:%M:%S" > /tmp/.hashandtime
else
    git --no-pager log -n $commitcount --reverse --pretty="| %cd | %h | " --date=format:"%a | %d.%m. | %H:%M:%S" | nl > /tmp/.hashandtime
fi
git --no-pager log -n $commitcount --reverse --pretty="%ae" | cut -c -2 | tr a-z A-Z > /tmp/.commitauthor
git --no-pager log -n $commitcount --reverse --pretty="%h§" --shortstat | sed -z 's/§\n\n//g' > /tmp/.statsofcommits
git --no-pager log -n $commitcount --reverse --pretty=" %s" > /tmp/.messagesofcommits

IFS=$'\n'

linecounter=0
max_files_changed=0
max_insertions=0
max_deletions=0

# Wenn kein "changed" in der Zeile ist, handelt es sich wahrscheinlich um einen Merge und das
# "files changed" wird von git nicht ausgegeben, somit muss es erst per git diff geholt werden
# &
# Maxmimale Anzahl geänderter Files, Insertions & Deletions herausfinden
while read -r line; do
    ((linecounter++))
    echo -ne "Log wird geparsed ($linecounter/$commitcount)\r"

    if [[ $line == *changed* ]]; then
        newline=$(echo $line | cut -d " " -f2-)
    else
        hash=$(echo $line | sed 's/§//')
        newline="$(git diff $hash^ $hash --stat | grep "changed,")"
    fi
    sed -i "s/$line/$newline/" /tmp/.statsofcommits

    files_changed=$(echo $newline | grep -Eo '[0-9]+' | head -1)
    insertions=0
    [[ $newline == *"insertion"* ]] && insertions=$(echo $newline | grep -Eo '[0-9]+' | sed -n 2p)
    deletions=0
    [[ $newline == *"deletion"* ]] && deletions=$(echo $newline | grep -Eo '[0-9]+' | tail -1)

    [[ $files_changed -gt $max_files_changed ]] && max_files_changed=$files_changed
    [[ $insertions    -gt $max_insertions    ]] && max_insertions=$insertions
    [[ $deletions     -gt $max_deletions     ]] && max_deletions=$deletions
done < /tmp/.statsofcommits

echo -ne "                                               \r" #"Log wird geparsed" überschreiben

len_of_max_files_changed=$(echo $max_files_changed | wc -c)
len_of_max_insertions=$(echo $max_insertions | wc -c)
len_of_max_deletions=$(echo $max_deletions | wc -c)

((len_of_max_files_changed--)) #wc -w is +1, aber nur bei der Variablen abziehen, da die anderen noch "+"/"-" haben

linecounter=0
cat /tmp/.hashandtime | while read -r line; do #Ausgabe der ganzen Infos
    ((linecounter++))
    commitauthor=$(sed -n ${linecounter}p /tmp/.commitauthor)
    echo -n $line
    [[ $repo == "abm" ]] && echo -n "$commitauthor | "
    statsline=$(sed -n ${linecounter}p /tmp/.statsofcommits)
    files_changed=$(echo $statsline | grep -Eo '[0-9]+' | head -1)
    insertions=0
    [[ $statsline == *"insertion"* ]] && insertions=$(echo $statsline | grep -Eo '[0-9]+' | sed -n 2p)
    deletions=0
    [[ $statsline == *"deletion"* ]] && deletions=$(echo $statsline | grep -Eo '[0-9]+' | tail -1)
    printf "%${len_of_max_files_changed}s" "$files_changed"
    printf " (\e[32m%${len_of_max_insertions}s\e[0m" "+$insertions"
    printf " \e[31m%${len_of_max_deletions}s\e[0m)" "-$deletions"
    echo -e " |"$(sed -n ${linecounter}p /tmp/.messagesofcommits)
done

rm -f /tmp/{.hashandtime,.statsofcommits,.messagesofcommits,.commitauthor,.mergestats}

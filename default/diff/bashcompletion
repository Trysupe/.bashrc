#!/bin/bash


_diff()
{
    local cur prev words cword
    _init_completion || return
    # echo "test0"

    local IFS=$'\n' i j k

    # echo $filenames

    compopt -o filenames

    # Use standard dir completion if no CDPATH or parameter starts with /,
    # ./ or ../
    if [[ -z "${CDPATH:-}" || "$cur" == ?(.)?(.)/* ]]; then
        # echo "test4"
        _filedir -d
        COMPREPLY[$((${#COMPREPLY[@]} + 1 ))]="diff"
        COMPREPLY[$((${#COMPREPLY[@]} + 1 ))]="pull"
        return
    fi

    # COMPREPLY="$COMPREPLY"" diff pull"

    # COMPREPLY[$((${#COMPREPLY[@]} + 1 ))]="diff"
    # COMPREPLY[$((${#COMPREPLY[@]} + 1 ))]="pull"
    echo "test0"

    echo $COMPREPLY
    echo "test1"
    COMPREPLY[k++]="diff"
    COMPREPLY[k++]="pull"
    echo "test2"

    return
}
# complete -F _filedir diff
complete -F _diff diff
# complete -F _mine diff


# _filedir()
# {
#     local IFS=$'\n'

#     _tilde "$cur" || return

#     local -a toks
#     local x reset

#     reset=$(shopt -po noglob); set -o noglob
#     toks=( $( compgen -d -- "$cur" ) )
#     eval $reset



#     if [[ ${#toks[@]} -ne 0 ]]; then
#         # 2>/dev/null for direct invocation, e.g. in the _filedir unit test
#         compopt -o filenames 2>/dev/null
#         COMPREPLY+=( "${toks[@]}" )
#         # echo $COMPREPLY[0]
#         # echo $COMPREPLY[1]
#         # echo $COMPREPLY[2]



#         # COMPREPLY[$((${#COMPREPLY[@]} + 1 ))]="diff"
#         # COMPREPLY[$((${#COMPREPLY[@]} + 1 ))]="pull"
#     fi
# } # _filedir()


_mine(){
    local IFS=$'\n'
    toks=( $( compgen -d -- "$cur" ) )
    COMPREPLY+=( "${toks[@]}" )
        COMPREPLY[$((${#COMPREPLY[@]} + 1 ))]="diff"
    COMPREPLY[$((${#COMPREPLY[@]} + 1 ))]="pull"
}